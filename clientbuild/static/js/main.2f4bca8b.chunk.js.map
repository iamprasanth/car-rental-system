{"version":3,"sources":["config/api.js","config/firebase.js","pages/login/Login.js","pages/signup/Signup.js","pages/date-selection/DateSelection.js","components/car-card/CarCard.js","pages/car-list/CarList.js","helpers/helper.js","pages/confirmation/Confirmation.js","pages/thankyou/ThankYou.js","pages/order-list/OrderList.js","components/header/Header.js","components/layout/InnerPageLayout.js","components/routing/CustomerRoute.js","components/routing/AdminRoute.js","App.js","index.js"],"names":["apiBaseUrl","exports","login","register","getCars","createCheckoutSession","getOrderList","markAsReturned","getTimeline","updateLike","getPost","newPost","deletePost","sendComment","getUserPosts","updateProfile","updateFollowingStatus","getUsersForAutocomplete","app","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","getAnalytics","Login","history","useState","error","setError","useEffect","localStorage","removeItem","getItem","push","validationSchema","Yup","email","required","password","formik","useFormik","initialValues","onSubmit","values","a","config","header","authentication","getAuth","signInWithEmailAndPassword","then","response","axios","post","api","firebaseUserId","user","uid","setItem","JSON","stringify","data","isAdmin","catch","className","handleSubmit","type","placeholder","name","onChange","handleChange","value","errors","defaultValue","to","Signup","fullname","phone","min","confirm_password","oneOf","username","createUserWithEmailAndPassword","console","log","status","validationErrors","message","key","setFieldError","autoComplete","DateSelection","loadCars","parse","from_date","to_date","passenger_count","settings","headers","fromData","success","cars","htmlFor","id","CarCard","car","useHistory","href","src","process","image","alt","make","model","description","perDayFare","onClick","redirectToConfirmation","CarList","setCars","map","index","_id","monthNames","dateFormatter","date","Date","currentMonth","getMonth","currentDate","getDate","getFullYear","Confirmation","STRIPE_PUBLIC_KEY","product","customerId","carId","fromDate","toDate","totalDays","number_of_days","totalFare","handleToken","token","addresses","result","pathname","search","alert","stripeKey","amount","number_of_day","billingAddress","shippingAddress","ThankYou","orderNumber","URLSearchParams","window","location","get","setOrders","$","on","e","this","is","orderId","attr","checked","confirmed","confirm","trigger","setTimeout","DataTable","order","content","meta","createdAt","isReturned","Header","botName","IdentityPoolId","backgroundColor","height","region","headerText","headerStyle","fontSize","greeting","InnerPageLayout","props","children","CustomerRoute","Component","component","rest","render","AdminRoute","App","exact","path","OrderList","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.2f4bca8b.chunk.js","sourcesContent":["// const apiBaseUrl = process.env.API_URL;\nconst apiBaseUrl = \"http://localhost:5000/\";\n\nexports.apiBaseUrl = apiBaseUrl;\nexports.login = apiBaseUrl + 'auth/login/';\nexports.register = apiBaseUrl + 'auth/register/';\nexports.getCars = apiBaseUrl + 'booking/cars/';\nexports.createCheckoutSession = apiBaseUrl + 'booking/checkout/';\nexports.getOrderList = apiBaseUrl + 'orders/list';\nexports.markAsReturned = apiBaseUrl + 'orders/mark-returned';\n\nexports.getTimeline = apiBaseUrl + 'posts/timeline/';\nexports.updateLike = apiBaseUrl + 'posts/like/';\nexports.getPost = apiBaseUrl + 'posts/';\nexports.newPost = apiBaseUrl + 'posts/';\nexports.deletePost = apiBaseUrl + 'posts/';\nexports.sendComment = apiBaseUrl + '%postId /comment';\nexports.getUserPosts = apiBaseUrl + 'posts/user/';\nexports.updateProfile = apiBaseUrl + 'users/';\nexports.updateFollowingStatus = apiBaseUrl + 'users/';\n// exports.getUsersForAutocomplete = apiBaseUrl + 'users/autocomplete/get';\nexports.getUsersForAutocomplete = apiBaseUrl + 'users/autocomplete/';\n","// Import the functions you need from the SDKs you need\nimport { initializeApp } from \"firebase/app\";\nimport { getAnalytics } from \"firebase/analytics\";\n// TODO: Add SDKs for Firebase products that you want to use\n// https://firebase.google.com/docs/web/setup#available-libraries\n\n// Your web app's Firebase configuration\n// For Firebase JS SDK v7.20.0 and later, measurementId is optional\nconst firebaseConfig = {\n    apiKey: \"AIzaSyDaE0R3zcA1yzaEU4Wk9QfqPlvF_Rg1RoU\",\n    authDomain: \"taxi-rental-system-auth.firebaseapp.com\",\n    projectId: \"taxi-rental-system-auth\",\n    storageBucket: \"taxi-rental-system-auth.appspot.com\",\n    messagingSenderId: \"777285257932\",\n    appId: \"1:777285257932:web:fccb6d35e544adbfa8d069\",\n    measurementId: \"G-3F5B5QXZF3\"\n};\n\n// Initialize Firebase\nconst app = initializeApp(firebaseConfig);\nconst analytics = getAnalytics(app);\n","import React from 'react'\nimport { useState, useEffect } from \"react\";\nimport { useFormik } from 'formik'\nimport axios from \"axios\";\nimport * as Yup from 'yup'\nimport { Link } from \"react-router-dom\";\nimport api from \"../../config/api\";\nimport { app } from '../../config/firebase';\nimport { getAuth, signInWithEmailAndPassword } from 'firebase/auth'\nimport \"./login.css\";\n\nexport default function Login({ history }) {\n    const [error, setError] = useState(\"\");\n    useEffect(() => {\n        localStorage.removeItem(\"user\");\n        if (localStorage.getItem(\"user\")) {\n            history.push(\"/\");\n        }\n    }, [history]);\n    const initialValues = { email: '', password: '' };\n    const validationSchema = Yup.object({\n        email: Yup.string().required('Please enter email'),\n        password: Yup.string().required('please enter password')\n    });\n    const formik = useFormik({\n        initialValues: initialValues,\n        validationSchema: validationSchema,\n        onSubmit: async values => {\n            setError('');\n            const config = {\n                header: {\n                    \"Content-Type\": \"application/json\",\n                },\n            };\n            const authentication = getAuth();\n            signInWithEmailAndPassword(authentication, values.email, values.password)\n                .then((response) => {\n                    axios.post(\n                        api.login,\n                        {\n                            firebaseUserId: response.user.uid\n                        },\n                        config\n                    ).then((response) => {\n                        localStorage.setItem(\"user\", JSON.stringify(response.data.response));\n                        if (response.data.response.isAdmin) {\n                            // User is an admin\n                            history.push(\"/orders\");\n                        } else {\n                            // USer is a customer\n                            history.push(\"/\");\n                        }\n                    }).catch((error) => {\n                        setError('Woops something went wrong Try again later');\n                    });\n                }).catch((error) =>\n                    setError(\"Incorrect Login credentials\")\n                );\n        },\n    });\n\n    return (\n        <div className=\"container\">\n            <div className=\"form-wrapper\">\n                <div className=\"title\"><span>Login Form</span></div>\n\n                <form onSubmit={formik.handleSubmit}>\n                    <div className=\"row\">\n                        <i className=\"fas fa-user\" />\n                        <input\n                            type=\"text\"\n                            placeholder=\"Email\"\n                            name=\"email\"\n                            onChange={formik.handleChange}\n                            value={formik.values.email}\n                        />\n                    </div>\n                    <div className=\"error-div\">\n                        {formik.errors.email}\n                    </div>\n                    <div className=\"row\">\n                        <i className=\"fas fa-lock\" />\n                        <input\n                            type=\"password\"\n                            placeholder=\"Password\"\n                            name=\"password\"\n                            onChange={formik.handleChange}\n                            value={formik.values.password}\n                            className={` ${formik.errors.password ? \"input-box-danger\" : \"\"}`}\n                        />\n                    </div>\n                    <div className=\"error-div\">\n                        {formik.errors.password && formik.errors.password}\n                    </div>\n                    <div className=\"error-div\">\n                        {error}\n                    </div>\n                    <div className=\"row button\">\n                        <input type=\"submit\" defaultValue=\"Login\" />\n                    </div>\n                    <div className=\"signup-link\">Not a member? <Link to={\"/signup\"}>Signup now</Link></div>\n                </form>\n            </div>\n        </div>\n    );\n};\n","import React from 'react'\nimport { useState, useEffect } from \"react\";\nimport { useFormik } from 'formik'\nimport axios from \"axios\";\nimport * as Yup from 'yup'\nimport { Link } from \"react-router-dom\";\nimport api from \"../../config/api\";\nimport { app } from '../../config/firebase';\nimport { getAuth, createUserWithEmailAndPassword } from 'firebase/auth'\nimport \"./signup.css\";\n\nexport default function Signup({ history }) {\n    const [error, setError] = useState(\"\");\n\n    const initialValues = {\n        fullname: '',\n        email: '',\n        username: '',\n        password: '',\n        confirm_password: ''\n    }\n    const validationSchema = Yup.object({\n        fullname: Yup.string().required('Please enter Full Name'),\n        email: Yup.string().required('Please enter email').email('Invaid email'),\n        phone: Yup.string().required('Please enter phone number'),\n        password: Yup.string().required('Please enter password').min(6, 'Password should be at least 6 characters long'),\n        confirm_password: Yup.string().required('Please enter password again').oneOf([Yup.ref('password'), null], 'Passwords must match')\n    });\n    const formik = useFormik({\n        initialValues: initialValues,\n        validationSchema: validationSchema,\n        onSubmit: async values => {\n            const config = {\n                header: {\n                    \"Content-Type\": \"application/json\",\n                },\n            };\n            const authentication = getAuth();\n            createUserWithEmailAndPassword(authentication, values.email, values.password)\n                .then((response) => {\n                    axios.post(\n                        api.register,\n                        {\n                            firebaseUserId: response.user.uid,\n                            fullname: values.fullname,\n                            phone: values.phone,\n                            email: values.email,\n                            password: values.password\n                        },\n                        config\n                    ).then((response) => {\n                        console.log(JSON.stringify(response.data))\n                        localStorage.setItem(\"user\", JSON.stringify(response.data));\n                        history.push(\"/\"); // redirect to home page\n                    }).catch((error) => {\n                        if (error.response.status == 400) {\n                            // Validation errors\n                            var validationErrors = error.response.data.message;\n                            for (const key in validationErrors) {\n                                formik.errors[key] = validationErrors[key]\n                            }\n                        } else if (error.response.status == 500 && error.response.data) {\n                            // Server errors\n                            setError(error.response.data.message)\n                        } else {\n                            // some kind of Uncaught server error\n                            setError('Woops something went wrong Try again later');\n                        }\n                    });\n                }).catch((error) => {\n                    if (error.message === 'Firebase: Error (auth/email-already-in-use).') {\n                        formik.setFieldError(\"email\", \"Email already exist\");\n                    }\n                });\n\n        },\n    });\n\n    return (\n        <div className=\"container\">\n            <div className=\"form-wrapper\">\n                <div className=\"title\"><span>Sign up Form</span></div>\n\n                <form onSubmit={formik.handleSubmit}>\n\n                    <div className=\"row\">\n                        <i className=\"fas fa-user\" />\n                        <input\n                            type=\"text\"\n                            placeholder=\"Full name\"\n                            name=\"fullname\"\n                            onChange={formik.handleChange}\n                            value={formik.values.fullname}\n                            className={`${formik.errors.fullname ? \"input-box-danger\" : \"\"}`}\n                        />\n                    </div>\n                    <div className=\"error-div\">\n                        {formik.errors.fullname}\n                    </div>\n                    <div className=\"row\">\n                        <i className=\"fas fa-phone\" />\n                        <input\n                            type=\"text\"\n                            placeholder=\"Phone Number\"\n                            name=\"phone\"\n                            onChange={formik.handleChange}\n                            value={formik.values.phone}\n                            autoComplete=\"new-password\"\n                            className={`${formik.errors.phone ? \"input-box-danger\" : \"\"}`}\n                        />\n                    </div>\n                    <div className=\"error-div\">\n                        {formik.errors.phone}\n                    </div>\n                    <div className=\"row\">\n                        <i className=\"fas fa-user\" />\n                        <input\n                            type=\"text\"\n                            placeholder=\"Email\"\n                            name=\"email\"\n                            onChange={formik.handleChange}\n                            value={formik.values.email}\n                            className={`${formik.errors.email ? \"input-box-danger\" : \"\"}`}\n                        />\n                    </div>\n                    <div className=\"error-div\">\n                        {formik.errors.email}\n                    </div>\n                    <div className=\"row\">\n                        <i className=\"fas fa-lock\" />\n                        <input\n                            type=\"password\"\n                            placeholder=\"Password\"\n                            name=\"password\"\n                            onChange={formik.handleChange}\n                            value={formik.values.password}\n                            autoComplete=\"new-password\"\n                            className={` ${formik.errors.password ? \"input-box-danger\" : \"\"}`}\n                        />\n                    </div>\n                    <div className=\"error-div\">\n                        {formik.errors.password}\n                    </div>\n                    <div className=\"row\">\n                        <i className=\"fas fa-lock\" />\n                        <input\n                            type=\"password\"\n                            placeholder=\"Confirm Password\"\n                            name=\"confirm_password\"\n                            onChange={formik.handleChange}\n                            value={formik.values.confirm_password}\n                            className={` ${formik.errors.confirm_password ? \"input-box-danger\" : \"\"}`}\n                        />\n                    </div>\n                    <div className=\"error-div\">\n                        {formik.errors.confirm_password}\n                    </div>\n                    <div className=\"error-div\">\n                        {error}\n                    </div>\n                    <div className=\"row button\">\n                        <input type=\"submit\" defaultValue=\"Login\" />\n                    </div>\n                    <div className=\"signup-link\">Already a member? <Link to={\"/login\"}>Login</Link></div>\n                </form>\n\n            </div>\n        </div>\n    );\n};\n","import { useFormik } from 'formik'\nimport axios from \"axios\";\nimport * as Yup from 'yup'\nimport api from \"../../config/api\";\nimport \"./dateSelection.css\";\n\nexport const DateSelection = ({ loadCars, history }) => {\n\n    const user = JSON.parse(localStorage.getItem('user'));\n    var initialValues = null;\n    if (localStorage.getItem(\"settings\") === null) {\n        initialValues = { from_date: '', to_date: '', passenger_count: '' };\n    } else {\n        const settings = JSON.parse(localStorage.getItem(\"settings\"));\n        initialValues = { from_date: settings.from_date, to_date: settings.to_date, passenger_count: settings.passenger_count };\n    }\n    const validationSchema = Yup.object({\n        from_date: Yup.string().required('Please enter date from which service is required'),\n        to_date: Yup.string().required('Please enter date upto which service is required'),\n        passenger_count: Yup.number('Please enter a valid count')\n    });\n    const formik = useFormik({\n        initialValues: initialValues,\n        validationSchema: validationSchema,\n        onSubmit: async values => {\n            const config = {\n                headers: {\n                    \"Content-Type\": \"application/json\",\n                },\n            };\n            const fromData =\n            {\n                from_date: values.from_date,\n                to_date: values.to_date,\n                passenger_count: values.passenger_count\n            };\n            try {\n                const { data, error } = await axios.post(api.getCars, fromData, {\n                    config,\n                });\n                if (data.success) {\n                    localStorage.setItem(\"cars\", JSON.stringify(data.response.cars));\n                    localStorage.setItem(\"settings\", JSON.stringify(data.response.settings));\n                    if (typeof loadCars !== \"undefined\") {\n                        // Companent is used as child compnent in CarList\n                        loadCars()\n                    } else {\n                        // Companent is rendered from the url \"/\"\n                        history.push(\"/select-car\");\n                    }\n                } else {\n                    // server side validation error\n                    var validationErrors = data.message;\n                    for (const key in validationErrors) {\n                        formik.errors[key] = validationErrors[key]\n                    }\n                }\n            } catch (error) {\n\n            }\n        },\n    });\n\n    return (\n        <>\n            <div className=\"container date-selection-page\">\n                <div className=\"form-wrapper\">\n                    <div className=\"title\"><span>Select dates and number of passenger</span></div>\n                    <form onSubmit={formik.handleSubmit}>\n                        <div className=\"row\">\n                            <div className=\"col-3\">\n                                <div className=\"form-group\">\n                                    <label htmlFor=\"inputFronDate\">Service Start Date</label>\n                                    <i className=\"fa fa-calendar\" />\n                                    <input\n                                        type=\"date\"\n                                        name=\"from_date\"\n                                        id=\"inputFronDate\"\n                                        autoComplete=\"new-password\"\n                                        onChange={formik.handleChange}\n                                        value={formik.values.from_date}\n                                        className={`form-control input-lg ${formik.errors.from_date ? \"input-box-danger\" : \"\"}`}\n                                    />\n                                </div>\n                                <div className=\"error-div\">\n                                    {formik.errors.from_date}\n                                </div>\n                            </div>\n                            <div className=\"col-3\">\n                                <div className=\"form-group\">\n                                    <label htmlFor=\"inputToDate\">Service End Date</label>\n                                    <i className=\"fa fa-calendar\" />\n                                    <input\n                                        type=\"date\"\n                                        name=\"to_date\"\n                                        id=\"inputToDate\"\n                                        onChange={formik.handleChange}\n                                        value={formik.values.to_date}\n                                        className={`form-control input-lg ${formik.errors.to_date ? \"input-box-danger\" : \"\"}`}\n                                    />\n                                </div>\n                                <div className=\"error-div\">\n                                    {formik.errors.to_date}\n                                </div>\n                            </div>\n\n                            <div className=\"col-3\">\n                                <div className=\"form-group\">\n                                    <label htmlFor=\"passengerCount\">Number of Passengers</label>\n                                    <i className=\"fa fa-user\" />\n                                    <input\n                                        type=\"number\"\n                                        name=\"passenger_count\"\n                                        id=\"passengerCount\"\n                                        onChange={formik.handleChange}\n                                        placeholder=\"Not mandatory to fill\"\n                                        value={formik.values.passenger_count}\n                                        className={`form-control input-lg ${formik.errors.passenger_count ? \"input-box-danger\" : \"\"}`}\n                                    />\n                                </div>\n                                <div className=\"error-div\">\n                                    {formik.errors.passenger_count}\n                                </div>\n                            </div>\n                            <div className=\"col-3\">\n                                <div className=\"row button\">\n                                    <input type=\"submit\" value=\"Find Cars for me\" />\n                                </div>\n                            </div>\n                        </div>\n                    </form>\n                </div>\n            </div>\n        </>\n    )\n};\n\n\nexport default DateSelection","import { useHistory, useLocation } from 'react-router-dom';\n\nexport const CarCard = ({ car }) => {\n    const history = useHistory();\n\n    const redirectToConfirmation = (car) => {\n        localStorage.setItem(\"selectedCar\", JSON.stringify(car));\n        history.push(\"/confirmation\");\n    }\n\n    return (\n        <>\n            <div className=\"col-md-6 col-sm-12\">\n                <div className=\"card mb-30\"><a className=\"card-img-tiles\" href=\"#\">\n                    <div className=\"inner\">\n                        <div className=\"main-img\"><img src={process.env.REACT_APP_PUBLIC_FOLDER + 'cars/' + car.image} alt=\"Category\" /></div>\n                    </div></a>\n                    <div className=\"card-body text-center\">\n                        <h4 className=\"card-title\">{car.make} {car.model}</h4>\n                        <p>{car.description}</p>\n                        <p className=\"text-muted\">Per day price: $ {car.perDayFare}</p><button onClick={() => redirectToConfirmation(car)} className=\"btn btn-outline-primary btn-sm\" href=\"#\">Proceed</button>\n                    </div>\n                </div>\n            </div>\n        </>\n    )\n}\n\nexport default CarCard\n","import { useState, useEffect } from \"react\";\nimport DateSelection from '../../pages/date-selection/DateSelection';\nimport CarCard from '../../components/car-card/CarCard';\nimport \"./carList.css\";\n\nconst CarList = () => {\n\n    const user = JSON.parse(localStorage.getItem('user'));\n    const [cars, setCars] = useState([]);\n\n    useEffect(async () => {\n        loadCars()\n    }, []);\n\n    const loadCars = () => {\n        setCars(JSON.parse(localStorage.getItem('cars')))\n    }\n\n    return (\n        <>\n            <div className=\"container mt-100\">\n                <div className=\"row\">\n                    <DateSelection loadCars={loadCars} />\n                </div>\n                <div className=\"row  car-listings\">\n\n                    {cars &&\n                        cars.map((car, index) => {\n                            return <CarCard key={car._id} car={car} />;\n                        })\n                    }\n\n                </div>\n            </div>\n\n        </>\n    )\n};\n\nexport default CarList;\n","const monthNames = [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\",\n    \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"\n];\n\nexport function dateFormatter(date) {\n    var date = new Date(date);\n    const currentMonth = monthNames[date.getMonth()];\n    const currentDate = date.getDate();\n    return `${currentMonth} ${currentDate}, ${date.getFullYear()}`;\n}","import api from \"../../config/api\";\nimport axios from \"axios\";\nimport StripeCheckout from \"react-stripe-checkout\";\nimport { dateFormatter } from '../../helpers/helper'\n\nimport \"./confirmation.css\";\n\nexport default function Confirmation({ history }) {\n\n    const user = JSON.parse(localStorage.getItem('user'));\n\n\n    const car = JSON.parse(localStorage.getItem('selectedCar'));\n    const settings = JSON.parse(localStorage.getItem('settings'));\n\n\n    console.log(process.env.STRIPE_PUBLIC_KEY)\n    const config = {\n        header: {\n            \"Content-Type\": \"application/json\",\n        },\n    };\n    const product = {\n        customerId: user._id,\n        carId: car._id,\n        fromDate: settings.from_date,\n        toDate: settings.to_date,\n        totalDays: settings.number_of_days,\n        totalFare: car.perDayFare * settings.number_of_days,\n    }\n    const handleToken = async (token, addresses) => {\n        const result = await axios.post(\n            api.createCheckoutSession,\n            { token, product },\n            config\n        );\n        const { success, response } = result.data;\n        // console.log(\"Response:\", result.data);\n        if (success === true) {\n            console.log(\"Payment Success\");\n            history.push({\n                pathname: '/thankyou',\n                search: '?order=' + response\n            });\n        } else {\n            alert(\"We could not process the payment request, Please try again.\");\n        }\n    }\n\n    return (\n        <>\n            <div className=\"container mt-100 confirmation\">\n                <div className=\"row  car-listings\">\n                    <div className=\"col-md-3\">\n                    </div>\n                    <div className=\"col-md-6 col-sm-12\">\n                        <div className=\"card mb-30\"><a className=\"card-img-tiles\" href=\"#\">\n                            <div className=\"inner\">\n                                <div className=\"main-img\"><img src={process.env.REACT_APP_PUBLIC_FOLDER + 'cars/' + car.image} alt=\"Category\" /></div>\n                            </div></a>\n                            <div className=\"card-body text-center\">\n                                <h4 className=\"card-title\">{car.make} {car.model}</h4>\n                                <p>{car.description}</p>\n                                <p className=\"text-muted\">Service start date: {dateFormatter(settings.from_date)}</p>\n                                <p className=\"text-muted\">Service end date : {dateFormatter(settings.to_date)}</p>\n                                <p className=\"text-muted\">Per day price: $ {car.perDayFare}</p>\n                                <p className=\"text-muted\">Total Fare: $ {car.perDayFare * settings.number_of_days}</p>\n\n                                <StripeCheckout\n                                    image={process.env.REACT_APP_PUBLIC_FOLDER + 'favicon.png'}\n                                    stripeKey=\"pk_test_51LQEUHAcQsSoHkd68ksJ8gQhVhD1Vra8fHZZJPAhw04eipQm6kORr7YK4dOWTsHm18CbNHI0TLFBSPrMiedg9SGQ00IIiHcCxu\"\n                                    token={handleToken}\n                                    amount={car.perDayFare * settings.number_of_day * 100}\n                                    name=\"Checkout\"\n                                    billingAddress\n                                    shippingAddress={false}\n                                    email={user.email}\n                                />\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </>\n    )\n};\n","import \"./thankyou.css\";\n\nconst ThankYou = () => {\n\n    const queryParams = new URLSearchParams(window.location.search)\n    const orderNumber = queryParams.get(\"order\")\n\n    return (\n        <>\n            <div className=\"container mt-100 thankyou\">\n                <div className=\"row  car-listings\">\n                    <div className=\"col-md-3\">\n                    </div>\n                    <div className=\"col-md-6 col-sm-12 text-center main-div\">\n                        <h3>Thank you for your order, Your order number is :</h3>\n                        <h3><b>{orderNumber}</b></h3>\n\n                        <h3>You can use our chat bot if you want to retreive the order details</h3>\n                    </div>\n                </div>\n            </div>\n\n        </>\n    )\n};\n\nexport default ThankYou;\n","import api from \"../../config/api\";\nimport axios from \"axios\";\nimport { useState, useEffect } from \"react\";\nimport { dateFormatter } from '../../helpers/helper'\n\n//Datatable Modules\nimport 'jquery/dist/jquery.min.js';\nimport \"datatables.net-dt/js/dataTables.dataTables\"\nimport \"datatables.net-dt/css/jquery.dataTables.min.css\"\nimport $ from 'jquery';\nimport \"./orderList.css\";\n\nexport default function Confirmation({ history }) {\n\n    const user = JSON.parse(localStorage.getItem('user'));\n    const car = JSON.parse(localStorage.getItem('selectedCar'));\n    const settings = JSON.parse(localStorage.getItem('settings'));\n\n    const [orders, setOrders] = useState([]);\n    useEffect(async () => {\n        try {\n            const { data } = await axios.get(\n                api.getOrderList,\n            );\n            setOrders(data.response)\n        } catch (error) {\n            console.log(error)\n        }\n    }, [history]);\n\n    const config = {\n        header: {\n            \"Content-Type\": \"application/json\",\n        },\n    };\n\n    $('body').on('mousedown', '#isReturned', async function (e) {\n        if (!$(this).is(':checked')) {\n            var confirmed;\n            var orderId = $(this).attr('orderId')\n            this.checked = confirmed = window.confirm(\"Are you sure to complete this order, is the vehicle returned ?\");\n            $(this).trigger(\"change\");\n            if (confirmed) {\n                const { data, error } = await axios.post(api.markAsReturned, {\n                    \"isReturned\": true,\n                    \"_id\": orderId\n                }, {\n                    config,\n                });\n            }\n        }\n    });\n\n\n    setTimeout(function () {\n        $('#order-table').DataTable({\n            \"bDestroy\": true,\n            order: [[0, 'desc']],\n            \"ajax\": {\n                \"url\": api.getOrderList,\n                \"dataSrc\": \"\"\n            },\n            \"columns\": [\n                {\n                    \"render\": function (data, type, content, meta) {\n                        return content.orderNumber\n                    }\n                },\n                {\n                    \"render\": function (data, type, content, meta) {\n                        return content.carId.make + \" \" + content.carId.model\n                    }\n                },\n                {\n                    \"render\": function (data, type, content, meta) {\n                        return dateFormatter(content.createdAt)\n                    }\n                },\n                {\n                    \"render\": function (data, type, content, meta) {\n                        return dateFormatter(content.fromDate)\n                    }\n                },\n                {\n                    \"render\": function (data, type, content, meta) {\n                        return dateFormatter(content.toDate)\n                    }\n                },\n                { \"data\": \"totalDays\" },\n                {\n                    \"render\": function (data, type, content, meta) {\n                        return content.totalFare\n                    }\n                },\n                {\n                    \"render\": function (data, type, content, meta) {\n                        if (content.isReturned) {\n                            return '<input type=\"checkbox\" id=\"isReturned1\" checked>';\n                        } else {\n                            return '<input type=\"checkbox\" id=\"isReturned\" orderId=' + content._id + ' > ';\n                        }\n                    }\n                },\n            ]\n        });\n    }, 1000);\n\n    return (\n        <>\n            <div className=\"container mt-100 confirmation\">\n                <div className=\"row  car-listings\">\n                    <div className=\"col-12\">\n                        <table id=\"order-table\" className=\"table table-hover table-bordered\">\n                            <thead>\n                                <tr>\n                                    <th>Order Number</th>\n                                    <th>Car</th>\n                                    <th>Order Created On</th>\n                                    <th>Service From Date</th>\n                                    <th>Service To Date</th>\n                                    <th>Total Days</th>\n                                    <th>Total Fare</th>\n                                    <th>Is car returned ?</th>\n                                </tr>\n                            </thead>\n                        </table>\n                    </div>\n                </div>\n            </div>\n        </>\n    )\n};\n","import { useState, useEffect } from \"react\";\nimport api from \"../../config/api\";\nimport axios from \"axios\";\nimport { Link } from \"react-router-dom\";\nimport LexChat from \"react-lex-plus\";\n\nimport \"./header.css\";\n\nexport default function Header() {\n    const user = JSON.parse(localStorage.getItem('user'));\n    const isAdmin = (user && user.isAdmin);\n    return (\n        <>\n            <div className=\"header\">\n                <div className=\"header__left\">\n                    <div className=\"header_text\">\n                        <Link to={isAdmin ? \"/orders\" : \"/\"} >\n                            <span>Car Rental System {isAdmin ? \" Admin Panel\" : \"\"}</span>\n                        </Link>\n                    </div>\n                    <LexChat\n                        botName=\"carRentalSystem\"\n                        IdentityPoolId=\"us-east-1:f59cc61d-c76b-4d58-a724-c46eb03f8c95\"\n                        placeholder=\"Ask your query\"\n                        backgroundColor=\"#FFFFFF\"\n                        height={430}\n                        region=\"us-east-1\"\n                        headerText=\"Chat with our bot\"\n                        headerStyle={{ backgroundColor: \"#2e81f4\", fontSize: \"30px\" }}\n                        greeting={\n                            \"Hello, how can I help? I can give order details like your car info, service start date, service end date, total fare\"\n                        }\n                    />\n                    {/* <div className=\"title\"><span>Login Form</span></div> */}\n                    {/* <a href=\"/\">\n                        <img src=\"https://upload.wikimedia.org/wikipedia/commons/thumb/5/51/Facebook_f_logo_%282019%29.svg/1200px-Facebook_f_logo_%282019%29.svg.png\" alt=\"\" />\n                    </a> */}\n                    {/* <div className=\"header__input\">\n                        <span className=\"material-icons\"> search </span>\n                        <Autosuggest\n                            suggestions={suggestions}\n                            onSuggestionsFetchRequested={onSuggestionsFetchRequested}\n                            onSuggestionsClearRequested={onSuggestionsClearRequested}\n                            getSuggestionValue={getSuggestionValue}\n                            renderSuggestion={renderSuggestion}\n                            inputProps={inputProps}\n                        />\n                    </div> */}\n                </div>\n                {/* <div className=\"header__right\">\n                    <div className=\"header__info\">\n                        <a href=\"/myprofile\">\n                            <img className=\"user__avatar\" alt=\"\" />\n                            <h4>{user && user.fullname}</h4>\n                        </a>\n                    </div>\n                    <span className=\"material-icons\"> expand_more </span>\n                </div> */}\n            </div>\n        </>\n    );\n}\n","import Header from '../header/Header';\n\nconst InnerPageLayout = (props) => {\n    return (\n        <>\n            <Header />\n            <div className=\"main__body\">\n                {/* <div className=\"sidebar\"></div> */}\n                {props.children}\n            </div>\n        </>\n    )\n};\n\nexport default InnerPageLayout;\n","import { Redirect, Route } from \"react-router-dom\";\n\nconst CustomerRoute = ({ component: Component, ...rest }) => {\n\n\n    var user = localStorage.getItem(\"user\");\n    if (user) {\n        user = JSON.parse(localStorage.getItem('user'));\n    }\n    return (\n\n        < Route\n            {...rest}\n            render={(props) =>\n                user && !user.isAdmin ? <Component {...props} /> : <Redirect to=\"/login\" />\n            }\n        />\n    );\n};\n\nexport default CustomerRoute;","import { Redirect, Route } from \"react-router-dom\";\n\nconst AdminRoute = ({ component: Component, ...rest }) => {\n\n    var user = localStorage.getItem(\"user\");\n    if (user) {\n        user = JSON.parse(localStorage.getItem('user'));\n    }\n    return (\n\n        < Route\n            {...rest}\n            render={(props) =>\n                (user && user.isAdmin) ? <Component {...props} /> : <Redirect to=\"/login\" />\n            }\n        />\n    );\n};\n\nexport default AdminRoute;","import Login from './pages/login/Login';\nimport Signup from './pages/signup/Signup';\nimport CarList from './pages/car-list/CarList';\nimport DateSelection from './pages/date-selection/DateSelection';\nimport Confirmation from './pages/confirmation/Confirmation';\nimport ThankYou from './pages/thankyou/ThankYou';\nimport NotFound from './pages/error/NotFound';\nimport OrderList from './pages/order-list/OrderList';\nimport InnerPageLayout from './components/layout/InnerPageLayout';\nimport CustomerRoute from './components/routing/CustomerRoute';\nimport AdminRoute from './components/routing/AdminRoute';\nimport \"bootstrap/dist/css/bootstrap.min.css\";\n\nimport {\n    BrowserRouter as Router,\n    Switch,\n    Route,\n    Redirect,\n    useLocation\n} from \"react-router-dom\";\n\nexport const App = () => {\n\n    return (\n        <>\n            < Router >\n                <Switch>\n                    <Route exact path=\"/login\" component={Login} />\n                    <Route exact path=\"/signup\" component={Signup} />\n                    <InnerPageLayout>\n                        <CustomerRoute exact path=\"/\" component={DateSelection} />\n                        <CustomerRoute exact path=\"/select-car\" component={CarList} />\n                        <CustomerRoute exact path=\"/confirmation\" component={Confirmation} />\n                        <CustomerRoute exact path=\"/thankyou\" component={ThankYou} />\n\n                        <AdminRoute exact path=\"/orders\" component={OrderList} />\n                    </InnerPageLayout>\n                </Switch >\n                {/* <Route path=\"*\" component={NotFound} /> */}\n            </ Router>\n        </>\n    )\n}\n\nexport default App","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <>\n    <App />\n  </>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}